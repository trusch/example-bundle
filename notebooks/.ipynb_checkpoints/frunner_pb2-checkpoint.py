# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: frunner.proto

import sys
_b=sys.version_info[0]<3 and (lambda x:x) or (lambda x:x.encode('latin1'))
from google.protobuf import descriptor as _descriptor
from google.protobuf import message as _message
from google.protobuf import reflection as _reflection
from google.protobuf import symbol_database as _symbol_database
from google.protobuf import descriptor_pb2
# @@protoc_insertion_point(imports)

_sym_db = _symbol_database.Default()




DESCRIPTOR = _descriptor.FileDescriptor(
  name='frunner.proto',
  package='grpc',
  syntax='proto3',
  serialized_pb=_b('\n\rfrunner.proto\x12\x04grpc\"\x14\n\x04\x44\x61ta\x12\x0c\n\x04\x64\x61ta\x18\x01 \x01(\x0c\x32\x35\n\x0e\x46unctionRunner\x12#\n\x03Run\x12\n.grpc.Data\x1a\n.grpc.Data\"\x00(\x01\x30\x01\x62\x06proto3')
)




_DATA = _descriptor.Descriptor(
  name='Data',
  full_name='grpc.Data',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='data', full_name='grpc.Data.data', index=0,
      number=1, type=12, cpp_type=9, label=1,
      has_default_value=False, default_value=_b(""),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=23,
  serialized_end=43,
)

DESCRIPTOR.message_types_by_name['Data'] = _DATA
_sym_db.RegisterFileDescriptor(DESCRIPTOR)

Data = _reflection.GeneratedProtocolMessageType('Data', (_message.Message,), dict(
  DESCRIPTOR = _DATA,
  __module__ = 'frunner_pb2'
  # @@protoc_insertion_point(class_scope:grpc.Data)
  ))
_sym_db.RegisterMessage(Data)



_FUNCTIONRUNNER = _descriptor.ServiceDescriptor(
  name='FunctionRunner',
  full_name='grpc.FunctionRunner',
  file=DESCRIPTOR,
  index=0,
  options=None,
  serialized_start=45,
  serialized_end=98,
  methods=[
  _descriptor.MethodDescriptor(
    name='Run',
    full_name='grpc.FunctionRunner.Run',
    index=0,
    containing_service=None,
    input_type=_DATA,
    output_type=_DATA,
    options=None,
  ),
])
_sym_db.RegisterServiceDescriptor(_FUNCTIONRUNNER)

DESCRIPTOR.services_by_name['FunctionRunner'] = _FUNCTIONRUNNER

# @@protoc_insertion_point(module_scope)
